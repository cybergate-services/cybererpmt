version: '2.1'
services:
 
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    hostname: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=${URL}
      - SUBDOMAINS=${SUBDOMAINS},
      - EXTRA_DOMAINS=${EXTRA_DOMAINS}
      - VALIDATION=${VALIDATION}
      - EMAIL=${EMAIL}
      - DHLEVEL=${DHLEVEL}
      - ONLY_SUBDOMAINS=${ONLY_SUBDOMAINS}
      - STAGING=${STAGING}
      
    networks:
      cybererp-network1:
        aliases:
          - letsencrypt
      cybererp-network2:
        aliases:
          - letsencrypt
    volumes:
     
      - ./conf/proxy/odoo.conf:/config/nginx/proxy-confs/odoo.subdomain.conf:rw
      - ./conf/proxy/pgadmin.conf:/config/nginx/proxy-confs/pgadmin.subdomain.conf:rw
      - ./conf/proxy/portainer.conf:/config/nginx/proxy-confs/portainer.subdomain.conf:rw
      - ./conf/proxy/duplicati.conf:/config/nginx/proxy-confs/duplicati.subdomain.conf:rw
      - ./conf/htpasswd:/config/nginx/.htpasswd:rw
     
    ports:
      - 443:443
      - 80:80 #optional
    restart: always
  
  postgresql:
    image: 'cybergatelabs/postgres-multi-db'
    container_name: postgresql
    hostname: postgresql
    volumes:
      - './postgresql_data:/var/lib/postgresql/data'
    networks:
      cybererp-network1:
        aliases:
          - letsencrypt
      cybererp-network2:
        aliases:
          - letsencrypt
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRES_MULTIPLE_DATABASES="odoo_customer1,postgres: odoo_customer2,postgres"
    restart: always
    
  odoo_customer1:
    image: 'bitnami/odoo:12'
    container_name: odoo_customer1
    hostname: odoo_customer1
    volumes:  
      - './odoo_data/customer1:/bitnami'
      - './custom-addons/customer1/:/bitnami/odoo/addons/'
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-network1:
        aliases:
         - odoo_customer1
    depends_on:
      - postgresql
    restart: always 
    
  odoo_customer2:
    image: 'bitnami/odoo:12'
    container_name: odoo_customer2
    hostname: odoo_customer2
    volumes:  
      - './odoo_data/customer2:/bitnami'
      - './custom-addons/customer2/:/bitnami/odoo/addons/'
    environment:
      - ODOO_EMAIL=${ODOO_EMAIL}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - POSTGRESQL_USER=postgres
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT_NUMBER=5432
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=465
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PROTOCOL=ssl
    networks:
      cybererp-network2:
        aliases:
         - odoo_customer2
    depends_on:
      - postgresql
    restart: always  
  
  pgadmin:
    image: adminer
    container_name: pgadmin
    hostname: pgadmin
    restart: always
    #ports:
    #  - 8080:8080
    # depends_on:
    #  - postgresql
    networks:
      cybererp-network:
        aliases:
          - pgadmin
 
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./conf/portainer:/data
    restart: always
    networks:
      cybererp-network:
        aliases:
         - portainer
  
  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    hostname: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - CLI_ARGS= #optional
    volumes:
      - ./config/dupicati:/config
      - /opt/backup/duplicati:/backups
      - ./:/source
    ports:
      - 8200:8200
    restart: always
    networks:
      cybererp-network:
        aliases:
         - duplicati
volumes:
  postgresql_data:
    driver: local
  odoo_data: 
    driver: local
networks:
  cybererp-network1:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-cybererp
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.26.1.0/24
   cybererp-network2:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-cybererp
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.27.1.0/24
        
